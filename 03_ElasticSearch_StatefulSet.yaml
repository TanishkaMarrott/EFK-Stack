apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch-logging
  namespace: efklog
  labels:
    k8s-app: elasticsearch-logging
    addonmanager.kubernetes.io/mode: Reconcile
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elasticsearch-logging
  namespace: efklog
  labels:
    k8s-app: elasticsearch-logging
    addonmanager.kubernetes.io/mode: Reconcile
rules:
  - apiGroups: [""]
    resources: ["services", "namespaces", "endpoints"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elasticsearch-logging
  namespace: efklog
  labels:
    k8s-app: elasticsearch-logging
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
  - kind: ServiceAccount
    name: elasticsearch-logging
    namespace: efklog
roleRef:
  kind: ClusterRole
  name: elasticsearch-logging
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-logging
  namespace: efklog
  labels:
    k8s-app: elasticsearch-logging
    version: v7.3.2
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  serviceName: elasticsearch-logging
  replicas: 2
  selector:
    matchLabels:
      k8s-app: elasticsearch-logging
      version: v7.3.2
  template:
    metadata:
      labels:
        k8s-app: elasticsearch-logging
        version: v7.3.2
    spec:
      serviceAccountName: elasticsearch-logging
      # Added security context for file system group
      securityContext:
        fsGroup: 1000
      containers:
      - name: elasticsearch-logging
        image: quay.io/fluentd_elasticsearch/elasticsearch:v7.3.2
        imagePullPolicy: Always
        resources:
          # Adjusted CPU and memory limits and requests for optimal performance
          limits:
            cpu: 500m
            memory: 3Gi
          requests:
            cpu: 100m
            memory: 1Gi
        ports:
        - containerPort: 9200
          name: db
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        # Added persistent volume for Elasticsearch data
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
        env:
        - name: "NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      # Specifying the PersistentVolumeClaim
      volumes:
      - name: elasticsearch-data
        persistentVolumeClaim:
            claimName: elasticsearch-logging-pvc
      # initContainer to set vm.max_map_count
      initContainers:
      - name: elasticsearch-logging-init
        image: alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
  # Specified RollingUpdate strategy for StatefulSet updates
  updateStrategy:
    type: RollingUpdate
---
# PersistentVolumeClaim for Elasticsearch data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-logging-pvc
  namespace: efklog
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
